{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas, keras\n",
    "import numpy as np\n",
    "from sklearn.metrics import roc_auc_score\n",
    "from IPython.display import FileLink, FileLinks\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 1 image has 6x6 pixels = 36 pixels \n",
    "###################### Need to try 16 x 16 and 8 x 8 and see the effect (making a heatmap for 3,4 hits), can be changed in Convertroototpand.py\n",
    "pixels = [\"pixel_{0}\".format(i) for i in range(36)]\n",
    "def to_image(df):\n",
    "    return  np.expand_dims(np.expand_dims(df[pixels], axis=-1).reshape(-1,6,6), axis=-1)\n",
    "\n",
    "# replace this sample every time you train CNN\n",
    "store_train = pandas.HDFStore(\"output_final.h5\")\n",
    "\n",
    "# kinda like tree1\n",
    "df = store_train.select(\"df\",stop=-1) \n",
    "\n",
    "#cut on DeltaR and nUniqueSimTracksInSharedHit\n",
    "##################################################### Need to move this to ConvertRoottoPanda.py\n",
    "df = df[(df[\"GenDeltaR\"]<0.1) & (df[\"nUniqueSimTracksInSharedHit\"]>-1)]\n",
    "#images_train = to_image(df_train)\n",
    "\n",
    "\n",
    "# Don't need these since I'm using the same files and splitting it, might be useful if I'm using a training file and a testing file\n",
    "#store_test = pandas.HDFStore(\"pixelTrain30k.h5\") #######\n",
    "#df_test = store_test.select(\"df\",stop=-1)\n",
    "#df_test = df_test[(df_test[\"GenDeltaR\"]<0.1) & (df_test[\"nUniqueSimTracksInSharedHit\"]>-1)]0 if shared hit but not merged, -1 if neither, 1, 2,3 if sahred and merged\n",
    "#images_test = to_image(df_test)\n",
    "#comb = pandas.concat([df_train,df_test])\n",
    "#df_train=comb.sample(frac=0.6) ######\n",
    "##########################################################################\n",
    "\n",
    "# frac=0.5 sets half training and half testing\n",
    "df_train=df.sample(frac=0.5)\n",
    "df_test=df.drop(df_train.index)\n",
    "images_train = to_image(df_train)\n",
    "images_test = to_image(df_test)\n",
    "\n",
    "#***************************************************** Jack's notebook: only include shared hits so 0 events are not included here !\n",
    "# Make all test, train data merged hit\n",
    "#df_test = df_test[(df_test[\"isSharedHit\"]>0)]\n",
    "#df_train = df_train[(df_train[\"isSharedHit\"]>0)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(6044, 42)\n",
      "(6045, 42)\n"
     ]
    }
   ],
   "source": [
    "# Sanity check: printout (events, variables) Variables include 36 pixels, and a few others you can find in converroottopands.py\n",
    "print df_test.shape\n",
    "print df_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 5440 samples, validate on 605 samples\n",
      "Epoch 1/100\n",
      "5440/5440 [==============================] - 1s 246us/step - loss: 0.5686 - acc: 0.6987 - val_loss: 0.5496 - val_acc: 0.7124\n",
      "Epoch 2/100\n",
      "5440/5440 [==============================] - 1s 187us/step - loss: 0.5275 - acc: 0.7101 - val_loss: 0.5193 - val_acc: 0.7207\n",
      "Epoch 3/100\n",
      "5440/5440 [==============================] - 1s 189us/step - loss: 0.5019 - acc: 0.7325 - val_loss: 0.4964 - val_acc: 0.7537\n",
      "Epoch 4/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.4786 - acc: 0.7513 - val_loss: 0.4848 - val_acc: 0.7521\n",
      "Epoch 5/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.4628 - acc: 0.7572 - val_loss: 0.4745 - val_acc: 0.7636\n",
      "Epoch 6/100\n",
      "5440/5440 [==============================] - 1s 178us/step - loss: 0.4548 - acc: 0.7607 - val_loss: 0.4632 - val_acc: 0.7835\n",
      "Epoch 7/100\n",
      "5440/5440 [==============================] - 1s 169us/step - loss: 0.4471 - acc: 0.7601 - val_loss: 0.4740 - val_acc: 0.7653\n",
      "Epoch 8/100\n",
      "5440/5440 [==============================] - 1s 175us/step - loss: 0.4407 - acc: 0.7614 - val_loss: 0.4520 - val_acc: 0.7785\n",
      "Epoch 9/100\n",
      "5440/5440 [==============================] - 1s 173us/step - loss: 0.4335 - acc: 0.7669 - val_loss: 0.4519 - val_acc: 0.7851\n",
      "Epoch 10/100\n",
      "5440/5440 [==============================] - 1s 168us/step - loss: 0.4293 - acc: 0.7761 - val_loss: 0.4466 - val_acc: 0.7884\n",
      "Epoch 11/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.4268 - acc: 0.7695 - val_loss: 0.4442 - val_acc: 0.7934\n",
      "Epoch 12/100\n",
      "5440/5440 [==============================] - 1s 191us/step - loss: 0.4250 - acc: 0.7735 - val_loss: 0.4453 - val_acc: 0.7884\n",
      "Epoch 13/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.4207 - acc: 0.7776 - val_loss: 0.4447 - val_acc: 0.7884\n",
      "Epoch 14/100\n",
      "5440/5440 [==============================] - 1s 187us/step - loss: 0.4164 - acc: 0.7754 - val_loss: 0.4385 - val_acc: 0.7950\n",
      "Epoch 15/100\n",
      "5440/5440 [==============================] - 1s 183us/step - loss: 0.4170 - acc: 0.7765 - val_loss: 0.4407 - val_acc: 0.7934\n",
      "Epoch 16/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.4120 - acc: 0.7778 - val_loss: 0.4462 - val_acc: 0.7950\n",
      "Epoch 17/100\n",
      "5440/5440 [==============================] - 1s 192us/step - loss: 0.4114 - acc: 0.7741 - val_loss: 0.4515 - val_acc: 0.7835\n",
      "Epoch 18/100\n",
      "5440/5440 [==============================] - 1s 188us/step - loss: 0.4093 - acc: 0.7787 - val_loss: 0.4444 - val_acc: 0.7868\n",
      "Epoch 19/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.4049 - acc: 0.7868 - val_loss: 0.4433 - val_acc: 0.7901\n",
      "Epoch 20/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.4010 - acc: 0.7875 - val_loss: 0.4505 - val_acc: 0.7868\n",
      "Epoch 21/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.4052 - acc: 0.7829 - val_loss: 0.4527 - val_acc: 0.7851\n",
      "Epoch 22/100\n",
      "5440/5440 [==============================] - 1s 183us/step - loss: 0.3975 - acc: 0.7842 - val_loss: 0.4575 - val_acc: 0.7785\n",
      "Epoch 23/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.4019 - acc: 0.7858 - val_loss: 0.4500 - val_acc: 0.7835\n",
      "Epoch 24/100\n",
      "5440/5440 [==============================] - 1s 190us/step - loss: 0.3983 - acc: 0.7904 - val_loss: 0.4531 - val_acc: 0.7868\n",
      "Epoch 25/100\n",
      "5440/5440 [==============================] - 1s 187us/step - loss: 0.3957 - acc: 0.7888 - val_loss: 0.4497 - val_acc: 0.7868\n",
      "Epoch 26/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.3961 - acc: 0.7864 - val_loss: 0.4531 - val_acc: 0.7967\n",
      "Epoch 27/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3960 - acc: 0.7855 - val_loss: 0.4482 - val_acc: 0.7868\n",
      "Epoch 28/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3925 - acc: 0.7892 - val_loss: 0.4467 - val_acc: 0.7901\n",
      "Epoch 29/100\n",
      "5440/5440 [==============================] - 1s 183us/step - loss: 0.3912 - acc: 0.7899 - val_loss: 0.4500 - val_acc: 0.7851\n",
      "Epoch 30/100\n",
      "5440/5440 [==============================] - 1s 183us/step - loss: 0.3895 - acc: 0.7895 - val_loss: 0.4598 - val_acc: 0.7702\n",
      "Epoch 31/100\n",
      "5440/5440 [==============================] - 1s 149us/step - loss: 0.3903 - acc: 0.7892 - val_loss: 0.4438 - val_acc: 0.7884\n",
      "Epoch 32/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3906 - acc: 0.7906 - val_loss: 0.4522 - val_acc: 0.7884\n",
      "Epoch 33/100\n",
      "5440/5440 [==============================] - 1s 191us/step - loss: 0.3846 - acc: 0.7941 - val_loss: 0.4495 - val_acc: 0.7934\n",
      "Epoch 34/100\n",
      "5440/5440 [==============================] - 1s 187us/step - loss: 0.3849 - acc: 0.7928 - val_loss: 0.4474 - val_acc: 0.7636\n",
      "Epoch 35/100\n",
      "5440/5440 [==============================] - 1s 181us/step - loss: 0.3835 - acc: 0.7972 - val_loss: 0.4689 - val_acc: 0.7835\n",
      "Epoch 36/100\n",
      "5440/5440 [==============================] - 1s 173us/step - loss: 0.3825 - acc: 0.7926 - val_loss: 0.4565 - val_acc: 0.7818\n",
      "Epoch 37/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.3824 - acc: 0.7956 - val_loss: 0.4510 - val_acc: 0.7868\n",
      "Epoch 38/100\n",
      "5440/5440 [==============================] - 1s 190us/step - loss: 0.3772 - acc: 0.7974 - val_loss: 0.4484 - val_acc: 0.8017\n",
      "Epoch 39/100\n",
      "5440/5440 [==============================] - 1s 183us/step - loss: 0.3763 - acc: 0.7987 - val_loss: 0.4521 - val_acc: 0.8000\n",
      "Epoch 40/100\n",
      "5440/5440 [==============================] - 1s 182us/step - loss: 0.3773 - acc: 0.7960 - val_loss: 0.4492 - val_acc: 0.7917\n",
      "Epoch 41/100\n",
      "5440/5440 [==============================] - 1s 190us/step - loss: 0.3794 - acc: 0.7926 - val_loss: 0.4499 - val_acc: 0.7884\n",
      "Epoch 42/100\n",
      "5440/5440 [==============================] - 1s 192us/step - loss: 0.3727 - acc: 0.7985 - val_loss: 0.4549 - val_acc: 0.8017\n",
      "Epoch 43/100\n",
      "5440/5440 [==============================] - 1s 188us/step - loss: 0.3743 - acc: 0.7965 - val_loss: 0.4537 - val_acc: 0.7917\n",
      "Epoch 44/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.3714 - acc: 0.8015 - val_loss: 0.4501 - val_acc: 0.7934\n",
      "Epoch 45/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.3708 - acc: 0.7989 - val_loss: 0.4603 - val_acc: 0.7868\n",
      "Epoch 46/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3676 - acc: 0.8050 - val_loss: 0.4530 - val_acc: 0.8000\n",
      "Epoch 47/100\n",
      "5440/5440 [==============================] - 1s 190us/step - loss: 0.3680 - acc: 0.8035 - val_loss: 0.4515 - val_acc: 0.7868\n",
      "Epoch 48/100\n",
      "5440/5440 [==============================] - 1s 189us/step - loss: 0.3669 - acc: 0.8040 - val_loss: 0.4677 - val_acc: 0.7950\n",
      "Epoch 49/100\n",
      "5440/5440 [==============================] - 1s 177us/step - loss: 0.3647 - acc: 0.8031 - val_loss: 0.4597 - val_acc: 0.7884\n",
      "Epoch 50/100\n",
      "5440/5440 [==============================] - 1s 193us/step - loss: 0.3667 - acc: 0.8011 - val_loss: 0.4585 - val_acc: 0.8066\n",
      "Epoch 51/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.3670 - acc: 0.7985 - val_loss: 0.4517 - val_acc: 0.7917\n",
      "Epoch 52/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3640 - acc: 0.8059 - val_loss: 0.4584 - val_acc: 0.7967\n",
      "Epoch 53/100\n",
      "5440/5440 [==============================] - 1s 193us/step - loss: 0.3621 - acc: 0.8053 - val_loss: 0.4660 - val_acc: 0.7769\n",
      "Epoch 54/100\n",
      "5440/5440 [==============================] - 1s 188us/step - loss: 0.3590 - acc: 0.8090 - val_loss: 0.4534 - val_acc: 0.7934\n",
      "Epoch 55/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.3601 - acc: 0.8116 - val_loss: 0.4440 - val_acc: 0.7950\n",
      "Epoch 56/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.3629 - acc: 0.8031 - val_loss: 0.4402 - val_acc: 0.7901\n",
      "Epoch 57/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.3584 - acc: 0.8039 - val_loss: 0.4532 - val_acc: 0.7983\n",
      "Epoch 58/100\n",
      "5440/5440 [==============================] - 1s 195us/step - loss: 0.3552 - acc: 0.8077 - val_loss: 0.4585 - val_acc: 0.7752\n",
      "Epoch 59/100\n",
      "5440/5440 [==============================] - 1s 182us/step - loss: 0.3533 - acc: 0.8123 - val_loss: 0.4687 - val_acc: 0.7818\n",
      "Epoch 60/100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.3521 - acc: 0.8074 - val_loss: 0.4613 - val_acc: 0.7967\n",
      "Epoch 61/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.3560 - acc: 0.8068 - val_loss: 0.4664 - val_acc: 0.7868\n",
      "Epoch 62/100\n",
      "5440/5440 [==============================] - 1s 182us/step - loss: 0.3518 - acc: 0.8116 - val_loss: 0.4613 - val_acc: 0.7967\n",
      "Epoch 63/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.3477 - acc: 0.8086 - val_loss: 0.4613 - val_acc: 0.7719\n",
      "Epoch 64/100\n",
      "5440/5440 [==============================] - 1s 181us/step - loss: 0.3526 - acc: 0.8112 - val_loss: 0.4607 - val_acc: 0.7917\n",
      "Epoch 65/100\n",
      "5440/5440 [==============================] - 1s 181us/step - loss: 0.3495 - acc: 0.8112 - val_loss: 0.4494 - val_acc: 0.7983\n",
      "Epoch 66/100\n",
      "5440/5440 [==============================] - 1s 172us/step - loss: 0.3469 - acc: 0.8138 - val_loss: 0.4577 - val_acc: 0.7835\n",
      "Epoch 67/100\n",
      "5440/5440 [==============================] - 1s 175us/step - loss: 0.3516 - acc: 0.8088 - val_loss: 0.4575 - val_acc: 0.7851\n",
      "Epoch 68/100\n",
      "5440/5440 [==============================] - 1s 167us/step - loss: 0.3507 - acc: 0.8057 - val_loss: 0.4644 - val_acc: 0.7851\n",
      "Epoch 69/100\n",
      "5440/5440 [==============================] - 1s 169us/step - loss: 0.3472 - acc: 0.8110 - val_loss: 0.4639 - val_acc: 0.7967\n",
      "Epoch 70/100\n",
      "5440/5440 [==============================] - 1s 178us/step - loss: 0.3436 - acc: 0.8119 - val_loss: 0.4466 - val_acc: 0.7934\n",
      "Epoch 71/100\n",
      "5440/5440 [==============================] - 1s 181us/step - loss: 0.3424 - acc: 0.8110 - val_loss: 0.4601 - val_acc: 0.7802\n",
      "Epoch 72/100\n",
      "5440/5440 [==============================] - 1s 187us/step - loss: 0.3402 - acc: 0.8160 - val_loss: 0.4524 - val_acc: 0.7934\n",
      "Epoch 73/100\n",
      "5440/5440 [==============================] - 1s 181us/step - loss: 0.3414 - acc: 0.8176 - val_loss: 0.4670 - val_acc: 0.7851\n",
      "Epoch 74/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3368 - acc: 0.8165 - val_loss: 0.4593 - val_acc: 0.7967\n",
      "Epoch 75/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3381 - acc: 0.8136 - val_loss: 0.4708 - val_acc: 0.7736\n",
      "Epoch 76/100\n",
      "5440/5440 [==============================] - 1s 203us/step - loss: 0.3398 - acc: 0.8121 - val_loss: 0.4593 - val_acc: 0.7983\n",
      "Epoch 77/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.3394 - acc: 0.8154 - val_loss: 0.4655 - val_acc: 0.7802\n",
      "Epoch 78/100\n",
      "5440/5440 [==============================] - 1s 183us/step - loss: 0.3352 - acc: 0.8184 - val_loss: 0.4499 - val_acc: 0.7950\n",
      "Epoch 79/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3384 - acc: 0.8116 - val_loss: 0.4660 - val_acc: 0.7917\n",
      "Epoch 80/100\n",
      "5440/5440 [==============================] - 1s 185us/step - loss: 0.3411 - acc: 0.8145 - val_loss: 0.4623 - val_acc: 0.7818\n",
      "Epoch 81/100\n",
      "5440/5440 [==============================] - 1s 188us/step - loss: 0.3368 - acc: 0.8143 - val_loss: 0.4683 - val_acc: 0.8000\n",
      "Epoch 82/100\n",
      "5440/5440 [==============================] - 1s 179us/step - loss: 0.3346 - acc: 0.8224 - val_loss: 0.4691 - val_acc: 0.7802\n",
      "Epoch 83/100\n",
      "5440/5440 [==============================] - 1s 188us/step - loss: 0.3340 - acc: 0.8153 - val_loss: 0.4656 - val_acc: 0.7835\n",
      "Epoch 84/100\n",
      "5440/5440 [==============================] - 1s 187us/step - loss: 0.3334 - acc: 0.8173 - val_loss: 0.4552 - val_acc: 0.7736\n",
      "Epoch 85/100\n",
      "5440/5440 [==============================] - 1s 182us/step - loss: 0.3349 - acc: 0.8151 - val_loss: 0.4609 - val_acc: 0.7719\n",
      "Epoch 86/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3292 - acc: 0.8186 - val_loss: 0.4735 - val_acc: 0.7868\n",
      "Epoch 87/100\n",
      "5440/5440 [==============================] - 1s 188us/step - loss: 0.3288 - acc: 0.8189 - val_loss: 0.4573 - val_acc: 0.7851\n",
      "Epoch 88/100\n",
      "5440/5440 [==============================] - 1s 194us/step - loss: 0.3306 - acc: 0.8222 - val_loss: 0.4744 - val_acc: 0.7868\n",
      "Epoch 89/100\n",
      "5440/5440 [==============================] - 1s 172us/step - loss: 0.3293 - acc: 0.8252 - val_loss: 0.4709 - val_acc: 0.7785\n",
      "Epoch 90/100\n",
      "5440/5440 [==============================] - 1s 182us/step - loss: 0.3292 - acc: 0.8197 - val_loss: 0.4689 - val_acc: 0.7769\n",
      "Epoch 91/100\n",
      "5440/5440 [==============================] - 1s 143us/step - loss: 0.3270 - acc: 0.8197 - val_loss: 0.4756 - val_acc: 0.7752\n",
      "Epoch 92/100\n",
      "5440/5440 [==============================] - 1s 166us/step - loss: 0.3261 - acc: 0.8167 - val_loss: 0.4776 - val_acc: 0.7719\n",
      "Epoch 93/100\n",
      "5440/5440 [==============================] - 1s 165us/step - loss: 0.3265 - acc: 0.8164 - val_loss: 0.4818 - val_acc: 0.7752\n",
      "Epoch 94/100\n",
      "5440/5440 [==============================] - 1s 167us/step - loss: 0.3243 - acc: 0.8237 - val_loss: 0.4777 - val_acc: 0.7884\n",
      "Epoch 95/100\n",
      "5440/5440 [==============================] - 1s 175us/step - loss: 0.3250 - acc: 0.8204 - val_loss: 0.4883 - val_acc: 0.7603\n",
      "Epoch 96/100\n",
      "5440/5440 [==============================] - 1s 174us/step - loss: 0.3245 - acc: 0.8180 - val_loss: 0.4878 - val_acc: 0.7818\n",
      "Epoch 97/100\n",
      "5440/5440 [==============================] - 1s 183us/step - loss: 0.3255 - acc: 0.8210 - val_loss: 0.4668 - val_acc: 0.7835\n",
      "Epoch 98/100\n",
      "5440/5440 [==============================] - 1s 184us/step - loss: 0.3231 - acc: 0.8241 - val_loss: 0.4706 - val_acc: 0.7917\n",
      "Epoch 99/100\n",
      "5440/5440 [==============================] - 1s 186us/step - loss: 0.3197 - acc: 0.8226 - val_loss: 0.4756 - val_acc: 0.7736\n",
      "Epoch 100/100\n",
      "5440/5440 [==============================] - 1s 190us/step - loss: 0.3213 - acc: 0.8202 - val_loss: 0.4784 - val_acc: 0.7818\n",
      "<bound method Sequential.summary of <keras.engine.sequential.Sequential object at 0x7fc842e9b910>>\n"
     ]
    }
   ],
   "source": [
    "# This is the CNN\n",
    "# Adding layers to Neural Network: (1) is convolutional,(1.5) 2D layer ,(2) flatten output then feed it to (3) which is a regular neural network.\n",
    "# (4) drops nodes in NN to avoid overfitting, finallly (5) outputs 2 values (prob(merged hit), prob(notmergedhit)), should add up to 1\n",
    "\n",
    "from keras.layers import Dense, Dropout, Activation\n",
    "# Define the network\n",
    "model = keras.models.Sequential()\n",
    "\n",
    "#layer (1)\n",
    "model.add(keras.layers.Conv2D(32, kernel_size=(4,4), padding='same', activation='relu'))\n",
    "\n",
    "#layer (1.5)\n",
    "############################################## 2D layers: need to add these back individually and see their effect\n",
    "#********************************************# what does this layer do again ?\n",
    "#model.add(keras.layers.Conv2D(16, kernel_size=(4,4), padding='same', activation='relu'))\n",
    "#model.add(keras.layers.Conv2D(16, kernel_size=(2,2), padding='same', activation='relu'))\n",
    "#model.add(keras.layers.Conv2D(16, kernel_size=(1,1), padding='same', activation='relu'))\n",
    "\n",
    "# max pooling 2D\n",
    "#model.add(keras.layers.MaxPooling2D(pool_size=(2, 2), padding='same', data_format=\"channels_last\"))\n",
    "\n",
    "# layer (2)\n",
    "model.add(keras.layers.Flatten(input_shape=(6,6,1),data_format = \"channels_last\"))\n",
    "#model.add(keras.layers.Dense(200, activation='relu'))\n",
    "\n",
    "# layer (3)\n",
    "model.add(keras.layers.Dense(50, activation='relu'))\n",
    "\n",
    "# layer 4, dropout 10%\n",
    "model.add(Dropout(0.1))\n",
    "model.add(keras.layers.Dense(2, activation='softmax'))\n",
    "#print(model.summary())\n",
    "                                                    \n",
    "# Layer (5), train the network\n",
    "###############################################################  try to find a way to include pt, eta, phi after first layer (convolutional)\n",
    "############################################################### tru to make a plot of loss[i]/epoch[i] to see when you get a plateau, which means\n",
    "# optimal number of epochs, var name might be model.loss.\n",
    "model.compile(loss='categorical_crossentropy', optimizer=\"adam\", metrics = [\"accuracy\"]) \n",
    "model.fit(images_train, keras.utils.to_categorical(df_train[\"nUniqueSimTracksInSharedHit\"]>1), epochs=100, validation_split=0.1) \n",
    "# validation fraction is fraction of training sample used for testing (here 10%), epochs: number of times you run the CNN.\n",
    "print(model.summary)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Running on full test sample. This may take a moment.\n",
      "[[2.7453501e-04 9.9972540e-01]\n",
      " [6.9648807e-04 9.9930346e-01]\n",
      " [4.2558018e-02 9.5744199e-01]\n",
      " ...\n",
      " [1.6833817e-04 9.9983168e-01]\n",
      " [3.2290253e-01 6.7709750e-01]\n",
      " [8.2147855e-01 1.7852145e-01]]\n"
     ]
    }
   ],
   "source": [
    "# Evaluate performance on independent sample, un CNN on Test sample\n",
    "print(\"Running on full test sample. This may take a moment.\")\n",
    "ret = model.predict(images_test)\n",
    "np.save(\"result.npy\",ret[:,1])\n",
    "print(ret)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.         0.00106952 0.00106952 ... 0.98770053 0.98877005 1.        ] [0.         0.03449928 0.04743651 ... 1.         1.         1.        ]\n",
      "0.8442986760413971\n",
      "False\n",
      "1818 1818\n"
     ]
    }
   ],
   "source": [
    "# evaluating ROC curve inputs\n",
    "from sklearn.metrics import roc_curve\n",
    "#fpr_keras, tpr_keras, thresholds_keras = roc_curve(keras.utils.to_categorical(df_test[\"isSharedHit\"])[:,1], ret[:,1])\n",
    "fpr_keras, tpr_keras, thresholds_keras = roc_curve(keras.utils.to_categorical(df_test[\"nUniqueSimTracksInSharedHit\"]>1)[:,1], ret[:,1])\n",
    "\n",
    "print fpr_keras,tpr_keras\n",
    "from sklearn.metrics import auc\n",
    "auc_keras = auc(fpr_keras, tpr_keras)\n",
    "print auc_keras\n",
    "print np.isnan(fpr_keras).all()\n",
    "print len(fpr_keras),len(tpr_keras)\n",
    "np.save(\"fpr_keras.npy\",fpr_keras)\n",
    "np.save(\"tpr_keras.npy\",tpr_keras)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8442986760413971\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting ROC curve\n",
    "\n",
    "fpr_keras = np.load(\"fpr_keras.npy\")\n",
    "tpr_keras = np.load(\"tpr_keras.npy\")\n",
    "auc = np.trapz(tpr_keras,fpr_keras)\n",
    "print auc\n",
    "\n",
    "plt.figure(1)\n",
    "plt.plot(fpr_keras, tpr_keras, label='Keras (area = {:.3f})'.format(auc))\n",
    "plt.xlabel('False positive rate')\n",
    "plt.ylabel('True positive rate')\n",
    "plt.title('ROC curve (area = {:.3f})'.format(auc))\n",
    "plt.savefig(\"ROC.png\")\n",
    "plt.savefig(\"ROC.pdf\")\n",
    "plt.show() \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pixel_14</th>\n",
       "      <th>pixel_15</th>\n",
       "      <th>pixel_16</th>\n",
       "      <th>pixel_17</th>\n",
       "      <th>pixel_10</th>\n",
       "      <th>pixel_11</th>\n",
       "      <th>pixel_12</th>\n",
       "      <th>pixel_13</th>\n",
       "      <th>pixel_18</th>\n",
       "      <th>pixel_19</th>\n",
       "      <th>...</th>\n",
       "      <th>trackPhi</th>\n",
       "      <th>trackPt</th>\n",
       "      <th>GenDeltaR</th>\n",
       "      <th>isSharedHit</th>\n",
       "      <th>pixel_32</th>\n",
       "      <th>pixel_33</th>\n",
       "      <th>pixel_30</th>\n",
       "      <th>pixel_31</th>\n",
       "      <th>pixel_34</th>\n",
       "      <th>pixel_35</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>0 rows × 42 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [pixel_14, pixel_15, pixel_16, pixel_17, pixel_10, pixel_11, pixel_12, pixel_13, pixel_18, pixel_19, pixel_2, pixel_3, pixel_0, pixel_1, pixel_6, pixel_7, pixel_4, pixel_5, pixel_8, pixel_9, nUniqueSimTracksInSharedHit, trackEta, pixel_29, pixel_28, pixel_25, pixel_24, pixel_27, pixel_26, pixel_21, pixel_20, pixel_23, pixel_22, trackPhi, trackPt, GenDeltaR, isSharedHit, pixel_32, pixel_33, pixel_30, pixel_31, pixel_34, pixel_35]\n",
       "Index: []\n",
       "\n",
       "[0 rows x 42 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Sanity check: no overlap between train and test \n",
    "pandas.merge(df_train, df_test, on=[x for x in df_train.columns], how='inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shared hits with at least 2 sim tracks:\n",
      "0.697932175352\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'nUniqueSimTracksInSharedHit')"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualizing our data\n",
    "print \"shared hits with at least 2 sim tracks:\"\n",
    "print float(sum(df_train[\"nUniqueSimTracksInSharedHit\"]>1))/len(df_train[\"nUniqueSimTracksInSharedHit\"])\n",
    "plt.hist(df_train[\"nUniqueSimTracksInSharedHit\"],histtype=\"step\",bins=6,range=(-0.5,5.5))\n",
    "plt.title(\"nUniqueSimTracksInSharedHit\") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.697932175352\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualizing merged (2 or more) vs not merged (1 or 0 (?)) \n",
    "################################################################ Look at events with nUniqueSimTracksInSharedHit = 0(seem to be uncategorized ?)\n",
    "print float(sum(df_train[\"nUniqueSimTracksInSharedHit\"]>1))/len(df_train[\"nUniqueSimTracksInSharedHit\"])\n",
    "plt.hist(df_train[\"nUniqueSimTracksInSharedHit\"]>1,histtype=\"step\",bins=2,range=(-0.5,1.5))\n",
    "plt.title(\"Distribution of Hits in Training Data\")\n",
    "plt.xticks([0,1],(\"Not Merged\",\"Merged\"))\n",
    "plt.savefig(\"merged_dist.png\")\n",
    "plt.savefig(\"merged_dist.pdf\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "############################################ Add plots of training vs testing for sig and background, can be found in Jack's code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>isMergedHit</th>\n",
       "      <th>isMergedHit</th>\n",
       "      <th>isMergedHit</th>\n",
       "      <th>isMergedHit</th>\n",
       "      <th>pixel_14</th>\n",
       "      <th>pixel_15</th>\n",
       "      <th>pixel_16</th>\n",
       "      <th>pixel_17</th>\n",
       "      <th>pixel_10</th>\n",
       "      <th>pixel_11</th>\n",
       "      <th>...</th>\n",
       "      <th>trackPhi</th>\n",
       "      <th>trackPt</th>\n",
       "      <th>GenDeltaR</th>\n",
       "      <th>isSharedHit</th>\n",
       "      <th>pixel_32</th>\n",
       "      <th>pixel_33</th>\n",
       "      <th>pixel_30</th>\n",
       "      <th>pixel_31</th>\n",
       "      <th>pixel_34</th>\n",
       "      <th>pixel_35</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.219716</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.596264</td>\n",
       "      <td>2.596264</td>\n",
       "      <td>0.009700</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.065272</td>\n",
       "      <td>0.070521</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.086922</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.276280</td>\n",
       "      <td>3.276280</td>\n",
       "      <td>0.010255</td>\n",
       "      <td>1</td>\n",
       "      <td>0.053123</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.072779</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.275286</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.432882</td>\n",
       "      <td>1.432882</td>\n",
       "      <td>0.006098</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.246602</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.270629</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.438324</td>\n",
       "      <td>1.438324</td>\n",
       "      <td>0.006041</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.235437</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.208246</td>\n",
       "      <td>0.215681</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.497626</td>\n",
       "      <td>0.497626</td>\n",
       "      <td>0.009110</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 46 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     isMergedHit  isMergedHit  isMergedHit  isMergedHit  pixel_14  pixel_15  \\\n",
       "28             1            1            1            1       0.0  0.219716   \n",
       "67             1            1            1            1       0.0  0.065272   \n",
       "102            1            1            1            1       0.0  0.275286   \n",
       "121            1            1            1            1       0.0  0.270629   \n",
       "149            0            0            0            0       0.0  0.208246   \n",
       "\n",
       "     pixel_16  pixel_17  pixel_10  pixel_11    ...     trackPhi   trackPt  \\\n",
       "28   0.000000       0.0  0.000000       0.0    ...     2.596264  2.596264   \n",
       "67   0.070521       0.0  0.086922       0.0    ...     3.276280  3.276280   \n",
       "102  0.000000       0.0  0.000000       0.0    ...     1.432882  1.432882   \n",
       "121  0.000000       0.0  0.000000       0.0    ...     1.438324  1.438324   \n",
       "149  0.215681       0.0  0.000000       0.0    ...     0.497626  0.497626   \n",
       "\n",
       "     GenDeltaR  isSharedHit  pixel_32  pixel_33  pixel_30  pixel_31  pixel_34  \\\n",
       "28    0.009700            1  0.000000  0.000000       0.0       0.0  0.000000   \n",
       "67    0.010255            1  0.053123  0.000000       0.0       0.0  0.072779   \n",
       "102   0.006098            1  0.000000  0.246602       0.0       0.0  0.000000   \n",
       "121   0.006041            1  0.000000  0.235437       0.0       0.0  0.000000   \n",
       "149   0.009110            0  0.000000  0.000000       0.0       0.0  0.000000   \n",
       "\n",
       "     pixel_35  \n",
       "28        0.0  \n",
       "67        0.0  \n",
       "102       0.0  \n",
       "121       0.0  \n",
       "149       0.0  \n",
       "\n",
       "[5 rows x 46 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Adding isMergedHit column , not necessary\n",
    "############# DO NOT RUN THIS !!! #############################\n",
    "\n",
    "# for train\n",
    "merged_hit = df_train[\"nUniqueSimTracksInSharedHit\"]>1\n",
    "merged_int = merged_hit.astype(int)\n",
    "df_train.insert(0, \"isMergedHit\", merged_int, True)\n",
    "\n",
    "# for test\n",
    "merged_hit_test = df_test[\"nUniqueSimTracksInSharedHit\"]>1\n",
    "merged_int_test = merged_hit_test.astype(int)\n",
    "df_test.insert(0, \"isMergedHit\", merged_int_test, True)\n",
    "\n",
    "df_test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Separating signal and background for train and test data\n",
    "signal = ret[df_test[\"nUniqueSimTracksInSharedHit\"]>1]\n",
    "background = ret[df_test[\"nUniqueSimTracksInSharedHit\"]<2]\n",
    "\n",
    "signal_plt = signal[:,1]\n",
    "background_plt = background[:,1]\n",
    "\n",
    "ret_train = model.predict(images_train)\n",
    "\n",
    "signal_train = ret_train[df_train[\"nUniqueSimTracksInSharedHit\"]>1]\n",
    "background_train = ret_train[df_train[\"nUniqueSimTracksInSharedHit\"]<2]\n",
    "signal_train_plt = signal_train[:,1]\n",
    "background_train_plt = background_train[:,1]\n",
    "\n",
    "Y_back_hist = np.histogram(background_train_plt, bins = 30, range = (0,1))[0]\n",
    "X_back_hist = np.histogram(background_train_plt, bins = 30, range = (0,1))[1]\n",
    "\n",
    "Y_sig_hist = np.histogram(signal_train_plt, bins = 30, range = (0,1))[0]\n",
    "X_sig_hist = np.histogram(signal_train_plt, bins = 30, range = (0,1))[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[False  True]\n"
     ]
    }
   ],
   "source": [
    "print ret_train > .46"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        pixel_14  pixel_15  pixel_16  pixel_17  pixel_10  pixel_11  pixel_12  \\\n",
      "154947  0.000000  0.152944  0.116939       0.0  0.000000       0.0       0.0   \n",
      "261354  0.000000  0.161311  0.000000       0.0  0.000000       0.0       0.0   \n",
      "234574  0.074901  0.031842  0.017514       0.0  0.073557       0.0       0.0   \n",
      "105238  0.000000  0.124183  0.000000       0.0  0.000000       0.0       0.0   \n",
      "33906   0.000000  0.262506  0.130613       0.0  0.312749       0.0       0.0   \n",
      "92879   0.164347  0.208786  0.000000       0.0  0.000000       0.0       0.0   \n",
      "244386  0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "267040  0.056227  0.114749  0.000000       0.0  0.000000       0.0       0.0   \n",
      "223854  0.050923  0.000000  0.081249       0.0  0.086593       0.0       0.0   \n",
      "40792   0.000000  0.052540  0.000000       0.0  0.000000       0.0       0.0   \n",
      "46487   0.082039  0.060541  0.000000       0.0  0.000000       0.0       0.0   \n",
      "30017   0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "86040   0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "73807   0.261621  0.069921  0.000000       0.0  0.000000       0.0       0.0   \n",
      "298170  0.181610  0.043324  0.103623       0.0  0.000000       0.0       0.0   \n",
      "214106  0.000000  0.190478  0.000000       0.0  0.000000       0.0       0.0   \n",
      "219253  0.075397  0.293875  0.000000       0.0  0.000000       0.0       0.0   \n",
      "37878   0.000000  0.172661  0.000000       0.0  0.000000       0.0       0.0   \n",
      "257524  0.000000  0.127867  0.107521       0.0  0.076320       0.0       0.0   \n",
      "145120  0.000000  0.487297  0.000000       0.0  0.000000       0.0       0.0   \n",
      "35983   0.000000  0.371017  0.000000       0.0  0.000000       0.0       0.0   \n",
      "260950  0.000000  0.028060  0.159677       0.0  0.184100       0.0       0.0   \n",
      "226103  0.000000  0.152488  0.000000       0.0  0.000000       0.0       0.0   \n",
      "219705  0.000000  0.097535  0.153235       0.0  0.100445       0.0       0.0   \n",
      "179244  0.000000  0.143858  0.000000       0.0  0.000000       0.0       0.0   \n",
      "116854  0.000000  0.132687  0.000000       0.0  0.000000       0.0       0.0   \n",
      "63193   0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "142081  0.038738  0.259906  0.000000       0.0  0.000000       0.0       0.0   \n",
      "255803  0.476673  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "227974  0.000000  0.217159  0.000000       0.0  0.000000       0.0       0.0   \n",
      "...          ...       ...       ...       ...       ...       ...       ...   \n",
      "8784    0.000000  0.233151  0.000000       0.0  0.000000       0.0       0.0   \n",
      "43903   0.000000  0.389759  0.000000       0.0  0.000000       0.0       0.0   \n",
      "31897   0.000000  0.107349  0.000000       0.0  0.000000       0.0       0.0   \n",
      "171029  0.000000  0.106049  0.000000       0.0  0.000000       0.0       0.0   \n",
      "142317  0.155491  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "220126  0.000000  0.202570  0.000000       0.0  0.000000       0.0       0.0   \n",
      "18372   0.047062  0.205102  0.000000       0.0  0.000000       0.0       0.0   \n",
      "46206   0.000000  0.423429  0.000000       0.0  0.000000       0.0       0.0   \n",
      "44309   0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "142434  0.000000  0.425686  0.000000       0.0  0.000000       0.0       0.0   \n",
      "179831  0.000000  0.476509  0.000000       0.0  0.000000       0.0       0.0   \n",
      "275308  0.000000  0.366503  0.087033       0.0  0.000000       0.0       0.0   \n",
      "200110  0.000000  0.000000  0.278156       0.0  0.000000       0.0       0.0   \n",
      "185623  0.000000  0.105450  0.000000       0.0  0.000000       0.0       0.0   \n",
      "14426   0.000000  0.347266  0.000000       0.0  0.000000       0.0       0.0   \n",
      "11167   0.000000  0.000000  0.484717       0.0  0.000000       0.0       0.0   \n",
      "61128   0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "1005    0.340095  0.081370  0.000000       0.0  0.000000       0.0       0.0   \n",
      "47774   0.000000  0.074604  0.193971       0.0  0.141345       0.0       0.0   \n",
      "278402  0.124377  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "227534  0.000000  0.000000  0.436585       0.0  0.000000       0.0       0.0   \n",
      "284050  0.000000  0.000000  0.218218       0.0  0.000000       0.0       0.0   \n",
      "43045   0.053419  0.181907  0.000000       0.0  0.000000       0.0       0.0   \n",
      "58464   0.000000  0.085957  0.000000       0.0  0.000000       0.0       0.0   \n",
      "125188  0.000000  0.325365  0.000000       0.0  0.000000       0.0       0.0   \n",
      "158318  0.000000  0.000000  0.288368       0.0  0.000000       0.0       0.0   \n",
      "164881  0.000000  0.435473  0.000000       0.0  0.000000       0.0       0.0   \n",
      "294608  0.000000  0.357078  0.000000       0.0  0.100988       0.0       0.0   \n",
      "139041  0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "86161   0.000000  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "\n",
      "        pixel_13  pixel_18  pixel_19    ...      trackPhi    trackPt  \\\n",
      "154947  0.000000       0.0  0.000000    ...      1.695997   1.695997   \n",
      "261354  0.000000       0.0  0.000000    ...      1.729843   1.729843   \n",
      "234574  0.000000       0.0  0.000000    ...      1.384978   1.384978   \n",
      "105238  0.000000       0.0  0.000000    ...      2.502795   2.502795   \n",
      "33906   0.000000       0.0  0.000000    ...      3.927353   3.927353   \n",
      "92879   0.000000       0.0  0.000000    ...      1.697028   1.697028   \n",
      "244386  0.000000       0.0  0.000000    ...      9.535042   9.535042   \n",
      "267040  0.000000       0.0  0.000000    ...      1.323129   1.323129   \n",
      "223854  0.000000       0.0  0.000000    ...      3.222042   3.222042   \n",
      "40792   0.000000       0.0  0.000000    ...     31.792377  31.792377   \n",
      "46487   0.000000       0.0  0.000000    ...     30.380339  30.380339   \n",
      "30017   0.000000       0.0  0.000000    ...      1.354223   1.354223   \n",
      "86040   0.000000       0.0  0.000000    ...      9.038250   9.038250   \n",
      "73807   0.000000       0.0  0.000000    ...      2.767694   2.767694   \n",
      "298170  0.000000       0.0  0.000000    ...      1.262088   1.262088   \n",
      "214106  0.000000       0.0  0.000000    ...      4.367934   4.367934   \n",
      "219253  0.000000       0.0  0.000000    ...      2.532604   2.532604   \n",
      "37878   0.000000       0.0  0.000000    ...     18.090032  18.090032   \n",
      "257524  0.000000       0.0  0.000000    ...      2.394998   2.394998   \n",
      "145120  0.000000       0.0  0.000000    ...      0.638655   0.638655   \n",
      "35983   0.000000       0.0  0.000000    ...      6.476088   6.476088   \n",
      "260950  0.000000       0.0  0.000000    ...      1.314161   1.314161   \n",
      "226103  0.000000       0.0  0.000000    ...      3.266872   3.266872   \n",
      "219705  0.000000       0.0  0.000000    ...     18.658000  18.658000   \n",
      "179244  0.000000       0.0  0.000000    ...      1.841388   1.841388   \n",
      "116854  0.000000       0.0  0.000000    ...      5.225543   5.225543   \n",
      "63193   0.000000       0.0  0.000000    ...      3.716930   3.716930   \n",
      "142081  0.000000       0.0  0.000000    ...      5.655678   5.655678   \n",
      "255803  0.000000       0.0  0.000000    ...      3.031010   3.031010   \n",
      "227974  0.000000       0.0  0.000000    ...      1.921699   1.921699   \n",
      "...          ...       ...       ...    ...           ...        ...   \n",
      "8784    0.000000       0.0  0.000000    ...      5.415904   5.415904   \n",
      "43903   0.000000       0.0  0.000000    ...     23.064879  23.064879   \n",
      "31897   0.109513       0.0  0.000000    ...     10.698331  10.698331   \n",
      "171029  0.000000       0.0  0.000000    ...     16.713398  16.713398   \n",
      "142317  0.000000       0.0  0.000000    ...     14.564973  14.564973   \n",
      "220126  0.000000       0.0  0.000000    ...     15.824515  15.824515   \n",
      "18372   0.000000       0.0  0.000000    ...      2.071131   2.071131   \n",
      "46206   0.000000       0.0  0.000000    ...      1.763240   1.763240   \n",
      "44309   0.000000       0.0  0.000000    ...     17.295820  17.295820   \n",
      "142434  0.000000       0.0  0.000000    ...     23.141366  23.141366   \n",
      "179831  0.000000       0.0  0.000000    ...      1.019645   1.019645   \n",
      "275308  0.000000       0.0  0.000000    ...      1.497736   1.497736   \n",
      "200110  0.000000       0.0  0.058697    ...      1.498566   1.498566   \n",
      "185623  0.000000       0.0  0.000000    ...     16.732420  16.732420   \n",
      "14426   0.000000       0.0  0.000000    ...      1.742852   1.742852   \n",
      "11167   0.000000       0.0  0.000000    ...      1.272240   1.272240   \n",
      "61128   0.000000       0.0  0.000000    ...      2.353953   2.353953   \n",
      "1005    0.000000       0.0  0.000000    ...     20.672641  20.672641   \n",
      "47774   0.000000       0.0  0.000000    ...      4.852235   4.852235   \n",
      "278402  0.000000       0.0  0.000000    ...      3.041947   3.041947   \n",
      "227534  0.000000       0.0  0.000000    ...      7.328117   7.328117   \n",
      "284050  0.000000       0.0  0.056597    ...      1.502371   1.502371   \n",
      "43045   0.000000       0.0  0.000000    ...      9.068750   9.068750   \n",
      "58464   0.000000       0.0  0.000000    ...      0.653967   0.653967   \n",
      "125188  0.000000       0.0  0.000000    ...     14.065168  14.065168   \n",
      "158318  0.000000       0.0  0.000000    ...      1.236435   1.236435   \n",
      "164881  0.000000       0.0  0.000000    ...      7.196848   7.196848   \n",
      "294608  0.000000       0.0  0.000000    ...      1.610805   1.610805   \n",
      "139041  0.000000       0.0  0.000000    ...      8.928004   8.928004   \n",
      "86161   0.000000       0.0  0.000000    ...      1.740783   1.740783   \n",
      "\n",
      "        GenDeltaR  isSharedHit  pixel_32  pixel_33  pixel_30  pixel_31  \\\n",
      "154947   0.005391            1  0.000000  0.000000       0.0  0.000000   \n",
      "261354   0.016156            1  0.000000  0.178391       0.0  0.000000   \n",
      "234574   0.021033            1  0.000000  0.069366       0.0  0.074517   \n",
      "105238   0.012972            1  0.000000  0.000000       0.0  0.000000   \n",
      "33906    0.007875            1  0.093219  0.000000       0.0  0.000000   \n",
      "92879    0.009717            1  0.000000  0.102124       0.0  0.000000   \n",
      "244386   0.001570            1  0.000000  0.000000       0.0  0.000000   \n",
      "267040   0.042146            1  0.065382  0.110653       0.0  0.000000   \n",
      "223854   0.009917            1  0.055788  0.000000       0.0  0.000000   \n",
      "40792    0.000620            1  0.068611  0.000000       0.0  0.000000   \n",
      "46487    0.032295            1  0.000000  0.096279       0.0  0.000000   \n",
      "30017    0.064527            1  0.000000  0.000000       0.0  0.000000   \n",
      "86040    0.001346            1  0.000000  0.000000       0.0  0.000000   \n",
      "73807    0.003049            1  0.000000  0.000000       0.0  0.000000   \n",
      "298170   0.012692            1  0.057727  0.000000       0.0  0.000000   \n",
      "214106   0.002141            1  0.000000  0.000000       0.0  0.000000   \n",
      "219253   0.001307            1  0.000000  0.000000       0.0  0.000000   \n",
      "37878    0.001551            1  0.000000  0.000000       0.0  0.000000   \n",
      "257524   0.028361            1  0.000000  0.093860       0.0  0.000000   \n",
      "145120   0.002061            0  0.000000  0.000000       0.0  0.000000   \n",
      "35983    0.004160            1  0.000000  0.000000       0.0  0.000000   \n",
      "260950   0.004546            1  0.000000  0.118561       0.0  0.000000   \n",
      "226103   0.007076            1  0.000000  0.073597       0.0  0.000000   \n",
      "219705   0.002014            1  0.000000  0.073780       0.0  0.000000   \n",
      "179244   0.013121            1  0.000000  0.000000       0.0  0.000000   \n",
      "116854   0.002090            1  0.000000  0.151830       0.0  0.000000   \n",
      "63193    0.002370            0  0.000000  0.000000       0.0  0.000000   \n",
      "142081   0.002406            1  0.000000  0.000000       0.0  0.000000   \n",
      "255803   0.013691            1  0.000000  0.000000       0.0  0.000000   \n",
      "227974   0.010815            1  0.128116  0.000000       0.0  0.000000   \n",
      "...           ...          ...       ...       ...       ...       ...   \n",
      "8784     0.017620            1  0.000000  0.179317       0.0  0.000000   \n",
      "43903    0.001429            0  0.000000  0.000000       0.0  0.000000   \n",
      "31897    0.005379            1  0.080604  0.000000       0.0  0.000000   \n",
      "171029   0.006279            1  0.054803  0.000000       0.0  0.000000   \n",
      "142317   0.000437            1  0.000000  0.000000       0.0  0.000000   \n",
      "220126   0.001676            1  0.000000  0.000000       0.0  0.000000   \n",
      "18372    0.099798            1  0.076061  0.044113       0.0  0.000000   \n",
      "46206    0.018761            1  0.000000  0.000000       0.0  0.000000   \n",
      "44309    0.001178            1  0.000000  0.000000       0.0  0.000000   \n",
      "142434   0.057153            1  0.000000  0.000000       0.0  0.000000   \n",
      "179831   0.020822            1  0.000000  0.000000       0.0  0.000000   \n",
      "275308   0.045296            1  0.000000  0.000000       0.0  0.000000   \n",
      "200110   0.001767            1  0.000000  0.000000       0.0  0.000000   \n",
      "185623   0.000488            1  0.000000  0.000000       0.0  0.000000   \n",
      "14426    0.018917            1  0.000000  0.000000       0.0  0.000000   \n",
      "11167    0.009688            1  0.000000  0.000000       0.0  0.000000   \n",
      "61128    0.002829            1  0.000000  0.000000       0.0  0.000000   \n",
      "1005     0.000820            1  0.000000  0.000000       0.0  0.000000   \n",
      "47774    0.004514            1  0.000000  0.000000       0.0  0.000000   \n",
      "278402   0.010275            1  0.000000  0.000000       0.0  0.000000   \n",
      "227534   0.098326            1  0.000000  0.000000       0.0  0.000000   \n",
      "284050   0.001373            1  0.000000  0.000000       0.0  0.000000   \n",
      "43045    0.003131            1  0.000000  0.033253       0.0  0.000000   \n",
      "58464    0.013333            0  0.000000  0.000000       0.0  0.000000   \n",
      "125188   0.014168            1  0.000000  0.000000       0.0  0.000000   \n",
      "158318   0.019938            1  0.000000  0.000000       0.0  0.000000   \n",
      "164881   0.002424            1  0.000000  0.000000       0.0  0.000000   \n",
      "294608   0.005963            1  0.000000  0.077361       0.0  0.000000   \n",
      "139041   0.001972            1  0.000000  0.000000       0.0  0.000000   \n",
      "86161    0.004545            1  0.000000  0.000000       0.0  0.000000   \n",
      "\n",
      "        pixel_34  pixel_35  \n",
      "154947  0.000000       0.0  \n",
      "261354  0.000000       0.0  \n",
      "234574  0.000000       0.0  \n",
      "105238  0.000000       0.0  \n",
      "33906   0.000000       0.0  \n",
      "92879   0.000000       0.0  \n",
      "244386  0.000000       0.0  \n",
      "267040  0.000000       0.0  \n",
      "223854  0.058788       0.0  \n",
      "40792   0.000000       0.0  \n",
      "46487   0.089908       0.0  \n",
      "30017   0.000000       0.0  \n",
      "86040   0.000000       0.0  \n",
      "73807   0.000000       0.0  \n",
      "298170  0.062735       0.0  \n",
      "214106  0.000000       0.0  \n",
      "219253  0.000000       0.0  \n",
      "37878   0.000000       0.0  \n",
      "257524  0.000000       0.0  \n",
      "145120  0.000000       0.0  \n",
      "35983   0.000000       0.0  \n",
      "260950  0.000000       0.0  \n",
      "226103  0.072189       0.0  \n",
      "219705  0.000000       0.0  \n",
      "179244  0.000000       0.0  \n",
      "116854  0.000000       0.0  \n",
      "63193   0.000000       0.0  \n",
      "142081  0.000000       0.0  \n",
      "255803  0.000000       0.0  \n",
      "227974  0.000000       0.0  \n",
      "...          ...       ...  \n",
      "8784    0.000000       0.0  \n",
      "43903   0.000000       0.0  \n",
      "31897   0.123802       0.0  \n",
      "171029  0.000000       0.0  \n",
      "142317  0.000000       0.0  \n",
      "220126  0.000000       0.0  \n",
      "18372   0.000000       0.0  \n",
      "46206   0.000000       0.0  \n",
      "44309   0.000000       0.0  \n",
      "142434  0.000000       0.0  \n",
      "179831  0.000000       0.0  \n",
      "275308  0.000000       0.0  \n",
      "200110  0.000000       0.0  \n",
      "185623  0.000000       0.0  \n",
      "14426   0.000000       0.0  \n",
      "11167   0.000000       0.0  \n",
      "61128   0.000000       0.0  \n",
      "1005    0.000000       0.0  \n",
      "47774   0.000000       0.0  \n",
      "278402  0.210582       0.0  \n",
      "227534  0.000000       0.0  \n",
      "284050  0.000000       0.0  \n",
      "43045   0.000000       0.0  \n",
      "58464   0.000000       0.0  \n",
      "125188  0.000000       0.0  \n",
      "158318  0.000000       0.0  \n",
      "164881  0.000000       0.0  \n",
      "294608  0.000000       0.0  \n",
      "139041  0.000000       0.0  \n",
      "86161   0.000000       0.0  \n",
      "\n",
      "[4242 rows x 42 columns]\n"
     ]
    }
   ],
   "source": [
    "print df_train[ret_train[:,1]>.46]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        pixel_14  pixel_15  pixel_16  pixel_17  pixel_10  pixel_11  pixel_12  \\\n",
      "43018        0.0  0.111042  0.000000       0.0  0.000000       0.0       0.0   \n",
      "137849       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "157091       0.0  0.539852  0.000000       0.0  0.000000       0.0       0.0   \n",
      "17047        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "58728        0.0  0.000000  0.318711       0.0  0.000000       0.0       0.0   \n",
      "100213       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "269222       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "235587       0.0  0.202763  0.000000       0.0  0.000000       0.0       0.0   \n",
      "218780       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "261546       0.0  0.167813  0.000000       0.0  0.000000       0.0       0.0   \n",
      "35666        0.0  0.260774  0.000000       0.0  0.000000       0.0       0.0   \n",
      "179298       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "165838       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "249633       0.0  0.000000  0.226085       0.0  0.000000       0.0       0.0   \n",
      "252863       0.0  0.227935  0.000000       0.0  0.000000       0.0       0.0   \n",
      "22308        0.0  0.316567  0.000000       0.0  0.000000       0.0       0.0   \n",
      "152717       0.0  0.169292  0.000000       0.0  0.000000       0.0       0.0   \n",
      "203041       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "286163       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "94549        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "57337        0.0  0.000000  0.110485       0.0  0.000000       0.0       0.0   \n",
      "171002       0.0  0.160745  0.000000       0.0  0.000000       0.0       0.0   \n",
      "96576        0.0  0.274535  0.000000       0.0  0.000000       0.0       0.0   \n",
      "146610       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "44337        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "83475        0.0  0.284313  0.000000       0.0  0.000000       0.0       0.0   \n",
      "148576       0.0  0.067223  0.000000       0.0  0.000000       0.0       0.0   \n",
      "87637        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "160508       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "169842       0.0  0.341884  0.000000       0.0  0.000000       0.0       0.0   \n",
      "...          ...       ...       ...       ...       ...       ...       ...   \n",
      "140576       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "89369        0.0  0.386618  0.000000       0.0  0.000000       0.0       0.0   \n",
      "98100        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "37365        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "92706        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "2762         0.0  0.149290  0.000000       0.0  0.000000       0.0       0.0   \n",
      "61952        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "122362       0.0  0.066417  0.000000       0.0  0.000000       0.0       0.0   \n",
      "93666        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "60547        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "129086       0.0  0.000000  0.313409       0.0  0.000000       0.0       0.0   \n",
      "46791        0.0  0.077064  0.000000       0.0  0.000000       0.0       0.0   \n",
      "46677        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "38116        0.0  0.165031  0.000000       0.0  0.000000       0.0       0.0   \n",
      "90734        0.0  0.059279  0.000000       0.0  0.000000       0.0       0.0   \n",
      "155034       0.0  0.182028  0.000000       0.0  0.000000       0.0       0.0   \n",
      "257779       0.0  0.000000  0.392942       0.0  0.064553       0.0       0.0   \n",
      "134488       0.0  0.202334  0.000000       0.0  0.000000       0.0       0.0   \n",
      "48042        0.0  0.129947  0.000000       0.0  0.000000       0.0       0.0   \n",
      "257184       0.0  0.156109  0.000000       0.0  0.000000       0.0       0.0   \n",
      "183609       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "159776       0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "48806        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "32865        0.0  0.186727  0.000000       0.0  0.000000       0.0       0.0   \n",
      "39214        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "247541       0.0  0.229406  0.000000       0.0  0.000000       0.0       0.0   \n",
      "94578        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "86937        0.0  0.000000  0.000000       0.0  0.000000       0.0       0.0   \n",
      "137609       0.0  0.112805  0.000000       0.0  0.000000       0.0       0.0   \n",
      "171029       0.0  0.106049  0.000000       0.0  0.000000       0.0       0.0   \n",
      "\n",
      "        pixel_13  pixel_18  pixel_19    ...      trackPhi    trackPt  \\\n",
      "43018        0.0       0.0       0.0    ...     39.549280  39.549280   \n",
      "137849       0.0       0.0       0.0    ...      4.054901   4.054901   \n",
      "157091       0.0       0.0       0.0    ...      1.706806   1.706806   \n",
      "17047        0.0       0.0       0.0    ...     13.455184  13.455184   \n",
      "58728        0.0       0.0       0.0    ...      6.350341   6.350341   \n",
      "100213       0.0       0.0       0.0    ...     11.459966  11.459966   \n",
      "269222       0.0       0.0       0.0    ...      2.824173   2.824173   \n",
      "235587       0.0       0.0       0.0    ...      1.848395   1.848395   \n",
      "218780       0.0       0.0       0.0    ...      6.111817   6.111817   \n",
      "261546       0.0       0.0       0.0    ...     11.079543  11.079543   \n",
      "35666        0.0       0.0       0.0    ...      3.773842   3.773842   \n",
      "179298       0.0       0.0       0.0    ...     20.120247  20.120247   \n",
      "165838       0.0       0.0       0.0    ...      1.814279   1.814279   \n",
      "249633       0.0       0.0       0.0    ...      0.533004   0.533004   \n",
      "252863       0.0       0.0       0.0    ...      2.417066   2.417066   \n",
      "22308        0.0       0.0       0.0    ...      1.783327   1.783327   \n",
      "152717       0.0       0.0       0.0    ...      1.344821   1.344821   \n",
      "203041       0.0       0.0       0.0    ...      1.605429   1.605429   \n",
      "286163       0.0       0.0       0.0    ...      0.426627   0.426627   \n",
      "94549        0.0       0.0       0.0    ...      3.562849   3.562849   \n",
      "57337        0.0       0.0       0.0    ...     12.048514  12.048514   \n",
      "171002       0.0       0.0       0.0    ...      9.749179   9.749179   \n",
      "96576        0.0       0.0       0.0    ...      2.050088   2.050088   \n",
      "146610       0.0       0.0       0.0    ...     12.583173  12.583173   \n",
      "44337        0.0       0.0       0.0    ...      8.525088   8.525088   \n",
      "83475        0.0       0.0       0.0    ...     15.385863  15.385863   \n",
      "148576       0.0       0.0       0.0    ...      5.871844   5.871844   \n",
      "87637        0.0       0.0       0.0    ...      1.998612   1.998612   \n",
      "160508       0.0       0.0       0.0    ...      0.842093   0.842093   \n",
      "169842       0.0       0.0       0.0    ...      1.197861   1.197861   \n",
      "...          ...       ...       ...    ...           ...        ...   \n",
      "140576       0.0       0.0       0.0    ...     12.712571  12.712571   \n",
      "89369        0.0       0.0       0.0    ...     10.929102  10.929102   \n",
      "98100        0.0       0.0       0.0    ...      2.779916   2.779916   \n",
      "37365        0.0       0.0       0.0    ...      9.121710   9.121710   \n",
      "92706        0.0       0.0       0.0    ...     15.935590  15.935590   \n",
      "2762         0.0       0.0       0.0    ...      1.480155   1.480155   \n",
      "61952        0.0       0.0       0.0    ...     14.836296  14.836296   \n",
      "122362       0.0       0.0       0.0    ...      2.576840   2.576840   \n",
      "93666        0.0       0.0       0.0    ...      2.617995   2.617995   \n",
      "60547        0.0       0.0       0.0    ...      7.703036   7.703036   \n",
      "129086       0.0       0.0       0.0    ...      3.614829   3.614829   \n",
      "46791        0.0       0.0       0.0    ...     26.027435  26.027435   \n",
      "46677        0.0       0.0       0.0    ...     25.780879  25.780879   \n",
      "38116        0.0       0.0       0.0    ...      2.762013   2.762013   \n",
      "90734        0.0       0.0       0.0    ...      2.579048   2.579048   \n",
      "155034       0.0       0.0       0.0    ...      5.818430   5.818430   \n",
      "257779       0.0       0.0       0.0    ...      1.245096   1.245096   \n",
      "134488       0.0       0.0       0.0    ...      5.765229   5.765229   \n",
      "48042        0.0       0.0       0.0    ...      3.324475   3.324475   \n",
      "257184       0.0       0.0       0.0    ...      9.600105   9.600105   \n",
      "183609       0.0       0.0       0.0    ...     16.763321  16.763321   \n",
      "159776       0.0       0.0       0.0    ...      2.642770   2.642770   \n",
      "48806        0.0       0.0       0.0    ...      2.709706   2.709706   \n",
      "32865        0.0       0.0       0.0    ...      2.594548   2.594548   \n",
      "39214        0.0       0.0       0.0    ...      1.450230   1.450230   \n",
      "247541       0.0       0.0       0.0    ...      2.138153   2.138153   \n",
      "94578        0.0       0.0       0.0    ...     23.381493  23.381493   \n",
      "86937        0.0       0.0       0.0    ...     12.987747  12.987747   \n",
      "137609       0.0       0.0       0.0    ...      8.073463   8.073463   \n",
      "171029       0.0       0.0       0.0    ...     16.713398  16.713398   \n",
      "\n",
      "        GenDeltaR  isSharedHit  pixel_32  pixel_33  pixel_30  pixel_31  \\\n",
      "43018    0.082892            1  0.000000  0.000000       0.0       0.0   \n",
      "137849   0.005523            0  0.000000  0.000000       0.0       0.0   \n",
      "157091   0.029686            1  0.000000  0.000000       0.0       0.0   \n",
      "17047    0.000620            1  0.000000  0.000000       0.0       0.0   \n",
      "58728    0.023307            1  0.000000  0.000000       0.0       0.0   \n",
      "100213   0.058599            1  0.000000  0.000000       0.0       0.0   \n",
      "269222   0.005293            1  0.000000  0.000000       0.0       0.0   \n",
      "235587   0.004414            1  0.000000  0.000000       0.0       0.0   \n",
      "218780   0.001217            1  0.000000  0.000000       0.0       0.0   \n",
      "261546   0.048595            1  0.000000  0.160738       0.0       0.0   \n",
      "35666    0.006008            1  0.000000  0.000000       0.0       0.0   \n",
      "179298   0.001488            1  0.000000  0.000000       0.0       0.0   \n",
      "165838   0.013139            1  0.000000  0.000000       0.0       0.0   \n",
      "249633   0.078857            0  0.000000  0.000000       0.0       0.0   \n",
      "252863   0.004628            1  0.000000  0.000000       0.0       0.0   \n",
      "22308    0.003871            1  0.000000  0.000000       0.0       0.0   \n",
      "152717   0.068875            1  0.000000  0.096857       0.0       0.0   \n",
      "203041   0.030261            1  0.000000  0.000000       0.0       0.0   \n",
      "286163   0.023395            0  0.000000  0.000000       0.0       0.0   \n",
      "94549    0.009901            1  0.000000  0.000000       0.0       0.0   \n",
      "57337    0.000454            1  0.000000  0.000000       0.0       0.0   \n",
      "171002   0.000352            1  0.000000  0.000000       0.0       0.0   \n",
      "96576    0.002992            1  0.000000  0.000000       0.0       0.0   \n",
      "146610   0.065849            1  0.000000  0.000000       0.0       0.0   \n",
      "44337    0.000753            1  0.000000  0.000000       0.0       0.0   \n",
      "83475    0.052773            1  0.000000  0.164843       0.0       0.0   \n",
      "148576   0.048474            1  0.000000  0.000000       0.0       0.0   \n",
      "87637    0.092110            1  0.000000  0.000000       0.0       0.0   \n",
      "160508   0.007819            0  0.000000  0.000000       0.0       0.0   \n",
      "169842   0.011437            1  0.000000  0.161450       0.0       0.0   \n",
      "...           ...          ...       ...       ...       ...       ...   \n",
      "140576   0.000517            1  0.000000  0.000000       0.0       0.0   \n",
      "89369    0.049781            1  0.000000  0.000000       0.0       0.0   \n",
      "98100    0.051472            1  0.000000  0.000000       0.0       0.0   \n",
      "37365    0.002041            1  0.000000  0.000000       0.0       0.0   \n",
      "92706    0.001484            1  0.000000  0.000000       0.0       0.0   \n",
      "2762     0.032754            1  0.000000  0.101751       0.0       0.0   \n",
      "61952    0.001401            1  0.000000  0.000000       0.0       0.0   \n",
      "122362   0.004441            1  0.000000  0.000000       0.0       0.0   \n",
      "93666    0.001522            1  0.000000  0.000000       0.0       0.0   \n",
      "60547    0.096947            1  0.000000  0.000000       0.0       0.0   \n",
      "129086   0.008793            1  0.000000  0.095893       0.0       0.0   \n",
      "46791    0.001166            1  0.101140  0.000000       0.0       0.0   \n",
      "46677    0.068358            1  0.000000  0.000000       0.0       0.0   \n",
      "38116    0.001459            1  0.000000  0.000000       0.0       0.0   \n",
      "90734    0.003672            1  0.000000  0.000000       0.0       0.0   \n",
      "155034   0.069576            1  0.000000  0.000000       0.0       0.0   \n",
      "257779   0.039725            1  0.000000  0.000000       0.0       0.0   \n",
      "134488   0.006001            1  0.000000  0.000000       0.0       0.0   \n",
      "48042    0.053834            1  0.000000  0.342541       0.0       0.0   \n",
      "257184   0.003206            1  0.000000  0.244365       0.0       0.0   \n",
      "183609   0.000665            1  0.000000  0.000000       0.0       0.0   \n",
      "159776   0.006381            0  0.000000  0.000000       0.0       0.0   \n",
      "48806    0.014491            1  0.000000  0.000000       0.0       0.0   \n",
      "32865    0.006133            1  0.000000  0.000000       0.0       0.0   \n",
      "39214    0.099412            1  0.000000  0.000000       0.0       0.0   \n",
      "247541   0.002589            1  0.000000  0.000000       0.0       0.0   \n",
      "94578    0.044787            1  0.000000  0.000000       0.0       0.0   \n",
      "86937    0.002870            1  0.000000  0.000000       0.0       0.0   \n",
      "137609   0.027580            1  0.000000  0.000000       0.0       0.0   \n",
      "171029   0.006279            1  0.054803  0.000000       0.0       0.0   \n",
      "\n",
      "        pixel_34  pixel_35  \n",
      "43018        0.0       0.0  \n",
      "137849       0.0       0.0  \n",
      "157091       0.0       0.0  \n",
      "17047        0.0       0.0  \n",
      "58728        0.0       0.0  \n",
      "100213       0.0       0.0  \n",
      "269222       0.0       0.0  \n",
      "235587       0.0       0.0  \n",
      "218780       0.0       0.0  \n",
      "261546       0.0       0.0  \n",
      "35666        0.0       0.0  \n",
      "179298       0.0       0.0  \n",
      "165838       0.0       0.0  \n",
      "249633       0.0       0.0  \n",
      "252863       0.0       0.0  \n",
      "22308        0.0       0.0  \n",
      "152717       0.0       0.0  \n",
      "203041       0.0       0.0  \n",
      "286163       0.0       0.0  \n",
      "94549        0.0       0.0  \n",
      "57337        0.0       0.0  \n",
      "171002       0.0       0.0  \n",
      "96576        0.0       0.0  \n",
      "146610       0.0       0.0  \n",
      "44337        0.0       0.0  \n",
      "83475        0.0       0.0  \n",
      "148576       0.0       0.0  \n",
      "87637        0.0       0.0  \n",
      "160508       0.0       0.0  \n",
      "169842       0.0       0.0  \n",
      "...          ...       ...  \n",
      "140576       0.0       0.0  \n",
      "89369        0.0       0.0  \n",
      "98100        0.0       0.0  \n",
      "37365        0.0       0.0  \n",
      "92706        0.0       0.0  \n",
      "2762         0.0       0.0  \n",
      "61952        0.0       0.0  \n",
      "122362       0.0       0.0  \n",
      "93666        0.0       0.0  \n",
      "60547        0.0       0.0  \n",
      "129086       0.0       0.0  \n",
      "46791        0.0       0.0  \n",
      "46677        0.0       0.0  \n",
      "38116        0.0       0.0  \n",
      "90734        0.0       0.0  \n",
      "155034       0.0       0.0  \n",
      "257779       0.0       0.0  \n",
      "134488       0.0       0.0  \n",
      "48042        0.0       0.0  \n",
      "257184       0.0       0.0  \n",
      "183609       0.0       0.0  \n",
      "159776       0.0       0.0  \n",
      "48806        0.0       0.0  \n",
      "32865        0.0       0.0  \n",
      "39214        0.0       0.0  \n",
      "247541       0.0       0.0  \n",
      "94578        0.0       0.0  \n",
      "86937        0.0       0.0  \n",
      "137609       0.0       0.0  \n",
      "171029       0.0       0.0  \n",
      "\n",
      "[180 rows x 42 columns]\n"
     ]
    }
   ],
   "source": [
    "print df_train[(ret_train[:,1]>.46) & (ret_train[:,1]<.5)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'CNN Signal and Background')"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Signal and background plot \n",
    "plt.hist(signal_plt, alpha = 0.5, color = 'b', label = 'Signal (test)', range = (0,1), bins = 30)\n",
    "plt.hist(background_plt, color = 'r', alpha = 0.5, label = 'Background (test)', range = (0,1), bins = 30)\n",
    "plt.scatter(X_back_hist[0:30] + 0.0166 , Y_back_hist, label='Background (train)', color ='r')\n",
    "plt.scatter(X_sig_hist[0:30] + 0.0166, Y_sig_hist, label='Signal (train)', color='b')\n",
    "plt.legend(loc='best')\n",
    "plt.title('CNN Signal and Background')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
